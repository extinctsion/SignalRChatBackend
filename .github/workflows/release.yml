name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  build-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '10.0.x'
          dotnet-quality: 'preview'

      - name: Restore dependencies
        run: dotnet restore SignalRChat.sln

      - name: Build
        run: dotnet build SignalRChat.sln --configuration Release --no-restore

      # Remove publish step since we only want source code

      - name: Get latest tag
        id: get_tag
        run: |
          git fetch --tags
          latest_tag=$(git tag --sort=-v:refname | head -n 1)
          if [[ -z "$latest_tag" ]]; then
            echo "tag=1.0.0" >> $GITHUB_OUTPUT
          else
            IFS='.' read -r major minor patch <<< "$latest_tag"
            patch=$((patch+1))
            echo "tag=$major.$minor.$patch" >> $GITHUB_OUTPUT
          fi

      - name: Create Release Tag
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git tag ${{ steps.get_tag.outputs.tag }}
          git push https://x-access-token:${GH_PAT}@github.com/${{ github.repository }}.git --tags

      - name: Archive source code (zip)
        run: |
          git archive --format zip --output source-${{ steps.get_tag.outputs.tag }}.zip HEAD

      - name: Archive source code (tar.gz)
        run: |
          git archive --format tar.gz --output source-${{ steps.get_tag.outputs.tag }}.tar.gz HEAD

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get_tag.outputs.tag }}
          name: Release ${{ steps.get_tag.outputs.tag }}
          files: |
            source-${{ steps.get_tag.outputs.tag }}.zip
            source-${{ steps.get_tag.outputs.tag }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
